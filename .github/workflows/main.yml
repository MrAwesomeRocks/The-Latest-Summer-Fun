name: Build and Push

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  PROJECT_ID: "469714"

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
      release-type: ${{ steps.release-type.outputs.type }}
      pre-release: ${{ steps.release-type.outputs.pre-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get modpack info
        id: info
        run: |
          manifestjson=`cat ./modpack/manifest.json`
          projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
          echo "::set-output name=projectname::$projectname"
          version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
          echo "::set-output name=version::$version"
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: Get release type
        id: release-type
        run: |
          rel_type="release"
          prerelease=false
          case "${{ needs.modpack-info.outputs.tag }}" in
            *alpha*)
              rel_type="alpha"
              prerelease=true
              ;;
            *beta*)
              rel_type="beta"
              prerelease=true
              ;;
            *)
              rel_type="release"
              prerelease=false
              ;;
          esac
          echo "::set-output name=type::$rel_type"
          echo "::set-output name=pre-release::$prerelease"

  changelog:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v1.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Write changelog to file
        run: |
          cat > CHANGELOG.md << EOF
          ${{ steps.changelog.outputs.changelog }}
          EOF
      - name: Store changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md

  build:
    runs-on: ubuntu-latest
    needs: [changelog, modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download PAX
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Move changelog
        run: mv ./CHANGELOG.md ./modpack/CHANGELOG.md
      - name: Export modpack
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: Rename zip
        run: |
          mv .out/${{ needs.modpack-info.outputs.projectname }}.zip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip

  release-github:
    runs-on: ubuntu-latest
    needs: [build, changelog, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          prerelease: "${{ needs.modpack-info.outputs.pre-release }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-curseforge:
    runs-on: ubuntu-latest
    needs: [build, changelog, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: Create release
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: ${{ env.PROJECT_ID }}
          game_endpoint: minecraft
          file_path: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          changelog: "${{ needs.changelog.outputs.changelog }}"
          changelog_type: markdown
          game_versions: ${{ needs.modpack-info.outputs.version }}
          release_type: ${{ needs.modpack-info.outputs.release-type }}
